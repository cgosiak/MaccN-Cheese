if (tokenBuffer == "$eof$"             EOF_SYM;
if (tokenBuffer == "bool"              BOOL_SYM;
if (tokenBuffer == "break"             BREAK_SYM;
if (tokenBuffer == "case"              CASE_SYM;
if (tokenBuffer == "cheese"            CHEESE_SYM;
if (tokenBuffer == "decs"              DECS_SYM;
if (tokenBuffer == "do"                DO_SYM;
if (tokenBuffer == "else"              ELSE_SYM;
if (tokenBuffer == "end"               END_SYM;
if (tokenBuffer == "false"             FALSE_SYM;
if (tokenBuffer == "float"             FLOAT_SYM;
if (tokenBuffer == "for"               FOR_SYM;
if (tokenBuffer == "hiphip"            HIPHIP_SYM;
if (tokenBuffer == "if"                IF_SYM;
if (tokenBuffer == "int"               INT_SYM;
if (tokenBuffer == "listen"            LISTEN_SYM;
if (tokenBuffer == "otherwise"         OTHERWISE_SYM;
if (tokenBuffer == "select"            SELECT_SYM;
if (tokenBuffer == "shout"             SHOUT_SYM;
if (tokenBuffer == "then"              THEN_SYM;
if (tokenBuffer == "true"              TRUE_SYM;
if (tokenBuffer == "while"             WHILE_SYM;
"["                 LSTAPLE;
"]"                 RSTAPLE;
"("                 LBANANA; 
")"                 RBANANA;
"{"                 LMUSTACHE;
"}"                 RMUSTACHE; 
":"                 COLON;
";"                 SEMICOLON;
","                 COMMA;
"="                 ASSIGN_OP;
"+"                 PLUS_OP; 
"-"                 MINUS_OP;
"*"                 MULT_OP;
"/"                 DIV_OP;
"<"                 LT_OP;
"<="                LE_OP;
">"                 GT_OP;
">="                GE_OP;
"=="                EQ_OP1;
"!!"                EQ_OP2;
"!="                NE_OP;
"ID"                ID;
"BOOL_LIT"          BOOL_LIT;
"INT_LIT"           INT_LIT;
"FLOAT_LIT"         FLOAT_LIT;
"CHEESE_LIT"        CHEESE_LIT;
